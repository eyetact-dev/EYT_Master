@extends('layouts.master')

@section('page-header')
    <!--Page header-->
    <div class="page-header">
        <div class="page-leftheader">
            <h4 class="page-title mb-0">{{ __('{{modelNamePluralUcWords}}') }}</h4>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#"><i class="fe fe-layout mr-2 fs-14"></i>Settings</a></li>
                <li class="breadcrumb-item active" aria-current="page"><a href="#">{{ __('{{modelNamePluralUcWords}}') }}</a></li>
            </ol>
        </div>
        <div class="page-rightheader">
        @php

                           $model_id = \App\Models\Module::where(
                                    'code',
                                    App\Generators\GeneratorUtils::singularSnakeCase('{{code}}'),
                                )
                                    ->orWhere('code', App\Generators\GeneratorUtils::pluralSnakeCase('{{code}}'))
                                    ->orWhere('code', '{{code}}')
                                    ?->first()->id;

                    $model = App\Models\Module::find($model_id);
                    //dd($model_id);
                @endphp
        @canany(['create.{{code}}','create.{{modelNameSingularLowercase}}'])

                     @if (auth()->user()->checkAllowdByModelID($model_id))
                    <div class="btn btn-list">
                        <a id="add_new" class="btn btn-info" data-toggle="tooltip" title=""
                            data-original-title="Add new"><i class="fe fe-plus mr-1"></i> Add new </a>
                    </div>

                @endif
            @endcanany
        </div>
    </div>
    <!--End Page header-->
@endsection
@section('content')
     <div class="row">
        <div class="col-12">
        @if ($errors->any())
    <div class="alert alert-danger">
        There were some errors with your request.
        <ul>
            @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
            @endforeach
        </ul>
    </div>
@endif
            <div class="card">
                <div class="card-header">
                <div class="card-title">{{ __('{{modelNamePluralUcWords}}') }}</div>

                </div>
                <div class="card-body">

                  @php

                                            $mAttrs = App\Models\Attribute::where('module', $model_id)
                                                                ->where('type', 'multi')
                                                                ->pluck('id')
                                                                ->toArray();


                                            $m = App\Models\Multi::whereIn('attribute_id', $mAttrs)->get();

                                            $calcOperations = [];


                                            foreach ($m as $item) {

                                                if ($item->type == 'calc' && $item->type_of_calc == 'one') {

                                                    $multiInput = App\Models\Multi::where('attribute_id', $item->attribute_id)
                                                                        ->where(function ($query) use ($item) {
                                                                            $query->where('name', 'like', $item->first_column)
                                                                                  ->orWhere('code', 'like', $item->first_column);
                                                                        })
                                                                        ->first();

                                                  $inputCalc=$multiInput->code;

                                                    $operation =$item->operation;

                                                    $calcOperations[$inputCalc] = $operation;

                                                }

                                            }

                                        @endphp

                    <div class="table-responsive p-1">
                        <table class="table align-items-center mb-0" id="data_table" width="100%">
                            <thead>
                                <tr>
                                    <th width="30px"></th>
                                    {{thColumns}}



                                    @php

                                        $checkAttr = App\Models\Attribute::where('module',$model_id)

                                                              ->count();

                                                              $callAggr = false;
                                                              if(  $checkAttr > 0)
                                                              {
                                                                $callAggr = true;

                                                              }
                                                              else{

                                                                $callAggr = false;

                                                              }

                                    @endphp

                                      @if($callAggr)

                                    {{agg}}

                                    @endif


                                        @if($model->is_system)
                                    	<th>{{ __('Global') }}</th>
										<th>{{ __('Status') }}</th>
                                        @endif

                                    <th>{{ __('Created At') }}</th>
                                    <th>{{ __('Updated At') }}</th>
                                    <th>{{ __('Action') }}</th>
                                </tr>
                            </thead>
                               <tfoot>
                                <tr>
                                    <th width="30px"></th>

                                   @if($callAggr)
                                    {{tfColumns}}
                                    @endif


                                        @if($model->is_system)
                                    	<th></th>
										<th></th>
                                        @endif

                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade bd-example-modal-lg" id="role_form_modal" tabindex="-1" role="dialog"
        aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myLargeModalLabel">Add Role</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span
                            aria-hidden="true">×</span> </button>
                </div>
                <div class="modal-body">

                </div>
            </div>
        </div>
    </div>
    <div class="modal fade bd-example-modal-lg" id="assign_modal" tabindex="-1" role="dialog"
        aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myLargeModalLabel">Assign Selected</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span
                            aria-hidden="true">×</span> </button>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-sm-5">
                            <div class="input-box" style="margin:0 !important">
                                <select class="google-input assign_g" name="group_id" tabindex="null">
                                    <option selected disabled>Select Group</option>
                                    @foreach ($customer_groups as $group)
                                        <option value="{{ $group->id }}">{{ $group->id }} - {{ $group->name }}
                                        </option>
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-1">
                            <span style="text-align: center;display: block;line-height: 50px">OR</span>
                        </div>
                        <div class="col-sm-4">
                            <div class="input-box" style="margin:0 !important">
                                <select class="google-input assign_c" name="user_id" tabindex="null">
                                    <option selected disabled>Select Customer</option>
                                    @foreach ($customers as $user)
                                        <option value="{{ $user->id }}">{{ $user->roles->pluck('name')[0] }} -
                                            {{ $user->id }} - {{ $user->username }}
                                        </option>
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-1">
                            <button class="btn btn-info assign" type="button" style="height: 50px;">Assign</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="custom-controls-stacked">
                                <label class="custom-control custom-radio" for="aaaa-1">
                                    <input class="custom-control-input" type="radio" name="aaaa" id="aaaa-1"
                                        value="1">
                                    <span class="custom-control-label">Assign Selected Items</span></label>

                                <label class="custom-control custom-radio" for="aaaa-0">
                                    <input class="custom-control-input" type="radio" name="aaaa" id="aaaa-0"
                                        value="0">
                                    <span class="custom-control-label">Assigne Selected Items with Selected
                                        Optons</span></label>

                                <label class="custom-control custom-radio" for="aaaa-0">
                                    <input class="custom-control-input" type="radio" name="aaaa" id="aaaa-0"
                                        value="0">
                                    <span class="custom-control-label">Assign All Items with Selected
                                        Options</span></label>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            @php
                                $module = \App\Models\Module::where(
                                    'code',
                                    App\Generators\GeneratorUtils::singularSnakeCase('{{code}}'),
                                )
                                    ->orWhere('code', App\Generators\GeneratorUtils::pluralSnakeCase('{{code}}'))
                                    ->orWhere('code', '{{code}}')
                                    ?->first();
                            @endphp
                            <div class="row">
                                @if(count($module->fields))
                                    @foreach ($module->fields as $field)
                                        <div class="col-4">
                                            <div class="per-box">
                                                <h5>{{ $field->name }}</h5>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <input id="1" type="checkbox" class="check-one"
                                                            name="permission_data[]" value="View.{{ $field->code }}">
                                                        <input id="1" type="hidden" name="permission_module[1]"
                                                            value="1">
                                                        <label for="1">View.{{ $field->name }}</label>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <input id="1" type="checkbox" class="check-one"
                                                            name="permission_data[]" value="Edit.{{ $field->code }}">
                                                        <input id="1" type="hidden" name="permission_module[1]"
                                                            value="1">
                                                        <label for="1">Edit.{{ $field->name }}</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    @endforeach
                                @endif
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>



    <div class="modal fade bd-example-modal-lg" id="assign_modal2" tabindex="-1" role="dialog"
        aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myLargeModalLabel">Assign Selected</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span
                            aria-hidden="true">×</span> </button>
                </div>
                <div class="modal-body">

                    <form  action="{{route('assign-record', '{{code}}')}}" method="post">
                    @csrf
                    <div class="row">
                        <div class="col-sm-10">
                            <div class="input-box" style="margin:0 !important">
                                <select class="google-input assign_g" name="ids[]" tabindex="null" multiple>
                                    @foreach (\App\Models\Admin\{{code2}}::where('user_id',1)->where('global',1)->where('status','active')->where('assign_id',null)
                                    ->orWhere('user_id',auth()->user()->user_id)->where('global',1)->where('status','active')->where('assign_id',null)->get() as $item)
                                    @if($item)
                                    @php
                                        $column = \App\Generators\GeneratorUtils::getColumnAfterId('{{code}}');
                                    @endphp
                                        <option value="{{ $item->id }}">{{ $item->id }} - {{ $item->$column }}
                                        </option>
                                        @endif
                                    @endforeach
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-1">
                            <button class="btn btn-info " type="submit" style="height: 50px;">Assign</button>
                        </div>
                    </div>
                    </form>




                </div>
            </div>
        </div>
    </div>
@endsection
@section('css')
    <!-- Data table css -->
    <link href="{{ URL::asset('assets/plugins/datatable/css/dataTables.bootstrap4.min.css') }}" rel="stylesheet" />
    <link href="{{ URL::asset('assets/plugins/datatable/css/buttons.bootstrap4.min.css') }}" rel="stylesheet">
    <link href="{{ URL::asset('assets/plugins/datatable/responsive.bootstrap4.min.css') }}" rel="stylesheet" />
    <!-- Slect2 css -->
    <link href="{{ URL::asset('assets/plugins/select2/select2.min.css') }}" rel="stylesheet" />
    <link href="{{ URL::asset('assets/plugins/sweet-alert/jquery.sweet-modal.min.css') }}" rel="stylesheet" />
    <link href="{{ URL::asset('assets/plugins/sweet-alert/sweetalert.css') }}" rel="stylesheet" />
        <!-- INTERNAL File Uploads css -->
    <link href="{{ asset('assets/plugins/fancyuploder/fancy_fileupload.css') }}" rel="stylesheet" />

    <!-- INTERNAL File Uploads css-->
    <link href="{{ asset('assets/plugins/fileupload/css/fileupload.css') }}" rel="stylesheet" type="text/css" />
      <link href="https://laravel.spruko.com/admitro/Vertical-IconSidedar-Light/assets/plugins/wysiwyag/richtext.css"
        rel="stylesheet" />

    <style>
        .dropdown-toggle:after {
            content: none !important;
        }

        li.dropdown-item button,
        li.dropdown-item a {
            border: none;
            background: transparent;
            color: #333;
            padding: 0px 10px;
        }

        li.dropdown-item {
            padding: 10px;
            text-align: left;
        }

        .dt-buttons.btn-group {
            float: left;
        }

        .parent {
            animation: unset !important;
        }
        table {
            max-width: 99% !important;
            width: 99% !important;
        }
        .range {
  -webkit-appearance: none;
  vertical-align: middle;
  outline: none;
  border: none;
  padding: 0;
  background: none;
    width:100%;
    box-shadow:0
}

.range::-webkit-slider-runnable-track {
  background-color: #d7dbdd;
  height: 20px;
  border-radius: 3px;
  border: 1px solid transparent;
  margin-top:-5px
}

.range[disabled]::-webkit-slider-runnable-track {
  border: 1px solid #d7dbdd;
  background-color: transparent;
  opacity: 0.4;
}

.range::-moz-range-track {
  background-color: #d7dbdd;
  height: 6px;
  border-radius: 3px;
  border: none;
}

.range::-ms-track {
  color: transparent;
  border: none;
  background: none;
  height: 6px;
}

.range::-ms-fill-lower {
  background-color: #d7dbdd;
  border-radius: 3px;
}

.range::-ms-fill-upper {
  background-color: #d7dbdd;
  border-radius: 3px;
}

.range::-ms-tooltip { display: none; /* display and visibility only */ }

.range::-moz-range-thumb {
  border-radius: 20px;
  height: 18px;
  width: 18px;
  border: none;
  background: none;
  background-color: #705ec8;
  margin-bottom:-10px;
}

.range:active::-moz-range-thumb {
  outline: none;
}

.range::-webkit-slider-thumb {
  -webkit-appearance: none !important;
  border-radius: 100%;
  background-color: #705ec8;
  height: 18px;
  width: 18px;
  margin-top: -1px;
}

.range[disabled]::-webkit-slider-thumb {
  background-color: transparent;
  border: 1px solid #d7dbdd;
}

.range:active::-webkit-slider-thumb {
  outline: none;
}

.range::-ms-thumb {
  border-radius: 100%;
  background-color: #705ec8;
  height: 18px;
  width: 18px;
  border: none;
}

.range:active::-ms-thumb {
  border: none;
}
output {
  border: 1px solid #d7dbdd;
  color: #333;
  font-family: 'Lato', sans-serif;
  font-size: 12px;
  padding: .4em .6em;
  border-radius: 3px;
    margin-top:15px
}
    </style>
@endsection
@section('js')
      <!-- INTERNAL Data tables -->
    <script src="{{ URL::asset('assets/plugins/datatable/js/jquery.dataTables.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/dataTables.bootstrap4.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/dataTables.buttons.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/buttons.bootstrap4.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/jszip.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/pdfmake.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/vfs_fonts.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/buttons.html5.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/buttons.print.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/js/buttons.colVis.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/dataTables.responsive.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/datatable/responsive.bootstrap4.min.js') }}"></script>
    <script src="{{ URL::asset('assets/js/datatables.js') }}"></script>
    <script src="{{ URL::asset('assets/js/popover.js') }}"></script>
    <script src="https://cdn.datatables.net/select/1.7.0/js/dataTables.select.min.js"></script>
    {{--<script src="https://cdn.datatables.net/buttons/3.0.0/js/dataTables.buttons.js"></script>--}}
    <script src="https://cdn.datatables.net/buttons/3.0.0/js/buttons.dataTables.js"></script>
    <script src="{{ asset('assets/plugins/fileupload/js/dropify.js') }}"></script>



    <!-- INTERNAL Sweet alert js -->
    <script src="{{ URL::asset('assets/plugins/sweet-alert/jquery.sweet-modal.min.js') }}"></script>
    <script src="{{ URL::asset('assets/plugins/sweet-alert/sweetalert.min.js') }}"></script>
    <script src="{{ URL::asset('assets/js/sweet-alert.js') }}"></script>
    <script src="https://laravel.spruko.com/admitro/Vertical-IconSidedar-Light/assets/plugins/wysiwyag/jquery.richtext.js"></script>

    <script>
 var calcOperations = @json($calcOperations);

    function changeBased() {
    $(document).on('change', '.based', function() {
        // Get the selected city option's data-source value
        var sourc = $(this).data('source');

        var selectedFirstId = $(this).find('option:selected').data(sourc);

        // Find the .based-on (country) select element
        var basedOnSelect = $('.based-on');

        // Find the option in the country select element that matches the selectedFirstId
        var firstOption = basedOnSelect.find('option[value="' + selectedFirstId + '"]');

        // Check if the option exists and update the select element
        if (firstOption.length > 0) {
            basedOnSelect.val(selectedFirstId);
            console.log('Updated First Select Value:', basedOnSelect.val());
        } else {
            console.log('No matching first option found for ID:', selectedFirstId);
        }
    });
}

    function changeEvents() {
            $(document).on('change', 'select', function() {
                var main_model = $(this).attr('id'); //element

                var $this = $(this);

                try {
                var prev = $(this).closest('td').find('input').val( $(this).find('option:selected').data('id') );
                // alert($(this).data('id'))
                } catch (error) {
                    console.log(error)
                }

                if ($('[data-source=' + main_model + ']').attr('id') == undefined) {
                    return;
                }
                var inform = $(this).data('inform'); //element
                var fixed = $(this).data('fixed');

                console.log('main_model:' + main_model)
                var main_model_id = $(this).find('option:selected').val(); // 1
                console.log('main_model_id:' + main_model_id)

                var attr = $(this).data('attrs');

                console.log(attr)
                if (true) {


                    var constrain = $(this).data('constrain')
                    var id = $(this).find('option:selected').val()
                    // $('[data-source='+constrain+']').hide();
                    $('[data-source='+constrain+']').val('');
                    $('[data-source='+constrain+']').find('option').hide();
                    console.log('option[data-' + constrain + '=' + id + ']')
                    $('[data-source='+constrain+']').find('option[data-' + constrain + '=' + id + ']')
                        .show();


                }

                var jsonStringWithDoubleQuotes = attr.replace(/'/g, '"');
                var obj = JSON.parse(jsonStringWithDoubleQuotes);

                console.log(obj)

                $.each(obj, function(key, value) {
                    $e_string = value.code;
                    $e_string2 = value.attribute;
                    $e_id = $e_string.split('_')
                    console.log('id : ' + '#' + $e_string)
                    console.log('source : ' + $('[name=' + $e_string + ']').data('source'))

                    $tag_source = '';
                    if( $('[name=' + $e_string + ']').data('source') != undefined){
                        $tag_source = $('[name=' + $e_string + ']').data('source');
                    }else{
                        $tag_source = $('[name=' + $e_id[0] + '_' + $e_string2 + '_' + $e_id[1] + ']').data('source');
                    }
                        if (inform) {
                        $tag_source = $this.parent().parent().parent().find('input').data('source');
                    }
                         if (fixed) {

                        $tag_source = $this.parent().find('label').data('source');
                    }

                    if ($tag_source == main_model) {

                        console.log(key + ": " + $e_id[0]);

                        path = "{{ url('/') }}/searchtargetfromsource/" + main_model + '/' +
                            main_model_id + '/' + value
                            .code + '/' + value.attribute

                        // alert(path)
                        console.log(path);
                        $.ajax({
                            async: false,
                            url: path,

                            success: function(response) {
                                console.log(response);
                                if(inform){
                                    $this.parent().parent().parent().find('input').val(response.data);
                                    return;
                                }

                                  if(fixed){
                                    $this.parent().find('label').html(response.data);
                                    return;
                                }

                                if( $('[name=' + $e_string + ']').data('source') != undefined){
                                    $('select[name=' + response.id + ']').find('option').hide();
                                    $('select[name=' + response.id + ']').find('option[value=' + response.data_id + ']').prop('selected', true).show();
                                    $('input[name=' + response.id + ']').val(response.data)
                                    $('[name=' + response.id + ']').prop('readOnly', true);
                                }else{
                                    $('select[name=' + $e_id[0] + '_' + $e_string2 + '_' + $e_id[1] + ']').find('option').hide();
                                    $('select[name=' + $e_id[0] + '_' + $e_string2 + '_' + $e_id[1] + ']').find('option[value=' + response.data_id + ']').prop('selected', true).show();
                                    $('input[name=' + $e_id[0] + '_' + $e_string2 + '_' + $e_id[1] + ']').val(response.data)
                                    $('[name=' + $e_id[0] + '_' + $e_string2 + '_' + $e_id[1] + ']').prop('readOnly', true);
                                }

                            }
                        });
                    }
                });



            });
        }

        function changeMulti() {
            $(document).on('change', '.select-cond', function() {

                var $this = $(this);
                var main_model = $(this).data('constrain'); //city

                console.log("un: " + $('[data-source=' + main_model + ']').length)

                    var fixed = $(this).data('fixmulti');





                  if(fixed == undefined)
                  {
                if ($('[data-source=' + main_model + ']').length == 0) {
                    return;
                }
                  }

                console.log('main_model:' + main_model)
                var main_model_id = $(this).find('option:selected').data('id'); // 1
                console.log('main_model_id:' + main_model_id)

                var attr = $(this).data('attr');

                console.log(attr)
                if (attr == '[]' || attr == [] || attr.length === 0) {


                    var constrain = $(this).data('constrain')
                    var id = $(this).find('option:selected').data('id')
                    $(this).closest('tr').find('.select-base').find('option').hide();
                    console.log('option[data-' + constrain + '=' + id + ']')
                    $(this).closest('tr').find('.select-base').find('option[data-' + constrain + '=' + id + ']')
                        .show();

                    return
                }

                var jsonStringWithDoubleQuotes = attr.replace(/'/g, '"');
                var obj = JSON.parse(jsonStringWithDoubleQuotes);

                console.log(obj)



                $.each(obj, function(key, value) {
                    $e_string = value.code;
                    $e_id = $e_string.split('_')
                    console.log('id : ' + '#' + $e_string)
                    console.log('source : ' + $('select[data-source=' + main_model + ']').length)



                    if (fixed) {

                        $this.closest('tr').find('label').data('source');
                        var attr2= $this.closest('tr').find('label').data('attr2');


                        path = "{{ url('/') }}/searchtargetfromsource/" + main_model + '/' +
                            main_model_id + '/' + value
                            .code + '/' + attr2

                        // alert(path)
                        console.log(path);
                        $.ajax({
                            url: path,
                            success: function(response) {
                                console.log(response);


                                $this.closest('tr').find('label').html(response.data);

                            }
                        });


                }


                    if ($('select[data-source=' + main_model + ']').length > 0) {

                        console.log(key + ": " + $e_id[0]);

                        path = "{{ url('/') }}/searchtargetfromsource/" + main_model + '/' +
                            main_model_id + '/' + value
                            .code + '/' + value.attribute

                        // alert(path)
                        console.log(path);
                        $.ajax({
                            url: path,
                            success: function(response) {
                                console.log(response);
                                $this.closest('tr').find('select[data-source=' + main_model +
                                    ']').find('option').hide();
                                $this.closest('tr').find('select[data-source=' + main_model +
                                    ']').find('option[data-id=' +
                                    response.data_id + ']').prop('selected', true).show();

                            }
                        });
                    }
                });






            });
        }

        var numberOfAttributes = @json($callAggr);
        $(document).on('click', '#add_new', function() {
           if (numberOfAttributes == 0)
                toastr.warning("please create new attribute before insert data!", "Warning");
                else{
                     $.ajax({
                url: "{{ route('{{modelNamePluralKebabCase}}.create') }}",
                success: function(response) {
                    //  console.log(response);
                    $(".modal-body").html(response);
                    $(".modal-title").html("Add ");
                    $("#role_form_modal").modal('show');
                    $('.dropify').dropify();
                    $('.content').each(function(i, obj) {
                        //test
                        $(this).richText();
                    });
                    changeEvents();
                    changeMulti();
                    changeBased();

                                            $('#role_form_modal').find('select[multiple]').select2();


                }
            });
                }
           
        });

        var table = $('#data_table').DataTable({
            processing: true,
            serverSide: true,
            dom: 'lBftrip',
            buttons: ['copy', 'excel', 'pdf', 'colvis'],
            responsive: true,
            language: {
                searchPlaceholder: 'Search...',
                sSearch: '',
                lengthMenu: '_MENU_ ',
            },
            ajax: "{{ route('{{modelNamePluralKebabCase}}.index') }}",
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 0
            }],
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            columns: [
                 {
                    'data': null,
                    'defaultContent': '',
                    'checkboxes': {


                        'selectRow': true
                    }
                },
                {{tdColumns}}
                 @if($model->is_system)
                	{
                    data: "global",
                    name: "global",
                },
				{
                    data: "status",
                    name: "status",
                },

                @endif

                {
                    data: 'created_at',
                    name: 'created_at'
                },
                {
                    data: 'updated_at',
                    name: 'updated_at'
                },
                {
                    data: 'action',
                    name: 'action',
                    orderable: false,
                    searchable: false
                }
            ],
        });


        table.button().add(0, {
            action: function(e, dt, button, config) {
                $("#assign_modal").modal('show');
            },
            text: 'Share'
        });
        @php
            $model = \App\Models\Module::where('code','{{code}}')->first();
        @endphp
        @if($model->is_system && (auth()->user()->hasRole('admin') || auth()->user()->hasRole('vendor')))
        table.button().add(0, {
            action: function(e, dt, button, config) {
                $("#assign_modal2").modal('show');
            },
            text: 'Assign'
        });
        @endif

        table.buttons().container()
            .appendTo('#data_table_wrapper .col-md-6:eq(0)');

            $('body').on('click', '.assign', function(e) {
            var form = this;

            var rows_selected = table.rows({
                selected: true
            }).data().toArray();
            console.log(rows_selected)

            var g_id = $('.assign_g').find(":selected").val();
            var c_id = $('.assign_c').find(":selected").val();
            console.log(c_id)

            console.log(JSON.stringify(rows_selected))

            $.ajax({
                url: "/assign/{{modelNamePluralKebabCase}}",
                type: "POST", // First change type to method here
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                },
                data: {
                    rows_selected: rows_selected,
                    g_id: g_id,
                    c_id: c_id
                },
                dataType: 'text',
                success: function(response) {
                    console.log(response);
                    response= JSON.parse(response)
                    swal({
                        title: response.msg
                    }, function(result) {
                        location.reload();
                    });

                },
                error: function(error) {
                    alert("error" + error);
                }
            });
            e.preventDefault();

        });



     $(document).ready(function() {

             applyCalcOperations();
             dynamicCalculation();

        var aggregatesData = {!! isset($aggregates) ? json_encode($aggregates) : '{}' !!};

if (typeof aggregatesData === 'object') {


       var aggregates = aggregatesData;

    var table = $('#data_table').DataTable({
      retrieve: true
    });

    updateTableFooterWithAggregates();

    function updateTableFooterWithAggregates() {
      console.log('Updating table footer with aggregates');

      $.each(aggregates, function(key, value) {

        var columnIndex = table.column(key + ':name').index();

        console.log(`Updating footer for column: ${key}, index: ${columnIndex}, value: ${value}`);


        $(table.column(columnIndex).footer()).html(value);
      });
    }
  }

  else{
    console.log('$aggregates is undefined, skipping footer update.');
}
});

                function applyCalcOperations() {

                        $.each(calcOperations, function(inputName, operation) {

                            $(`input[name*='[${inputName}]']`).each(function() {
                                $(this).attr('data-agg', 'true');
                                if (operation === 'sum') {
                                    $(this).attr('data-sum', 'true');
                                } else if (operation === 'avg') {
                                    $(this).attr('data-avg', 'true');
                                }
                            });
                        });


                        $('.table-field').each(function() {
                            sumGeneric($(this));
                        });
                    }


                   function dynamicCalculation() {
            $('input[data-first][data-second]').each(function() {
                let $input = $(this);
                let firstField = $input.data('first');
                let secondField = $input.data('second');
                let operation = $input.data('operation');

                function calculate() {
                    let firstValue = parseFloat($input.closest('tr').find(`input[name*='[${firstField}]']`).val()) || 0;
                    let secondValue = parseFloat($input.closest('tr').find(`input[name*='[${secondField}]']`).val()) || 0;
                    let result = 0;

                    if (operation === 'sum') {
                        result = firstValue + secondValue;
                    } else if (operation === 'multiple') {
                        result = firstValue * secondValue;
                    }

                    $input.val(result.toFixed(2));
                }

                // Initial calculation
                calculate();

                // Bind events
                $input.closest('tr').find(`input[name*='[${firstField}]'], input[name*='[${secondField}]']`).on('input', calculate);
            });
        }


                $(document).on('click', '.model-delete', function() {
        	var id = $(this).attr("data-id");
            swal({
                    title: "Are you sure?",
                    text: "Once deleted, you will not be able to recover this attribute!",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                    showCancelButton: true,


                }, function (willDelete) {
                    if (willDelete) {

                        $.ajax({
                            type: "DELETE",
                            url: '{{url("/")}}/{{modelNamePluralKebabCase}}/' + id,
                            headers: {
                                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                            },
                            success: function(response) {
	                            swal({
	                				title: response.msg
	                			}, function (result) {
	                				location.reload();
	                			});
                            }
                        });
                    }
                });
        });

        $(document).on('click', '#edit_item', function() {
            // window.addEventListener('load', function() {

            // }, false);
            var path = $(this).data('path')
            $.ajax({
                url: path,
                success: function(response) {
                     console.log(path);
                     console.log(response);
                    $(".modal-body").html(response);
                    $(".modal-title").html("edit ");
                    $("#role_form_modal").modal('show');
                    $('.dropify').dropify();
                    $('.select-sub').trigger('change');
                     $('.content').each(function(i, obj) {
                        //test
                        $(this).richText();
                    });
                    $('.select-cond').each(function(i, obj) {
                        var constrain = $(this).data('constrain')
                        var id = $(this).find('option:selected').data('id')
                        $(this).closest('tr').find('.select-base').find('option').hide();
                        console.log('option[data-'+constrain+'='+id+']')
                        $(this).closest('tr').find('.select-base').find('option[data-'+constrain+'='+id+']').show();
                    });
                    changeEvents()
                    changeMulti()

                                            $('#role_form_modal').find('select[multiple]').select2();
                                            $('.inform').trigger('change');
                                            $('.based').trigger('change');
                                            $('.fix-multi').trigger('change');
                                                    $('#role_form_modal .table-field').each(function() {
                                                    sumGeneric($(this));
                                                })
                                                applyCalcOperations();
                                                dynamicCalculation();
                                                    $('#role_form_modal .table-field').each(function() {
                                                    updateUniqueOptions($(this));
                                                })


                }
            });
        });


                    function sumGeneric(table) {
                    if (table.length === 0) {
                    console.error('Table not found');
                    return;
                    }

                    let sums = {};
                    let counts = {};
                    table.find('thead th').each(function(index) {
                    let inputs = table.find(`tbody tr td:nth-child(${index + 1}) input[data-agg]`);
                    if (inputs.length) {
                    sums[index] = 0;
                    counts[index] = 0;
                    }
                    });


                    table.find('tbody tr').each(function() {
                    $(this).find('td').each(function(index) {
                    let inputs = $(this).find('input[data-agg]');
                    inputs.each(function() {
                    let value = parseFloat($(this).val());
                    if (!isNaN(value)) { // Check if the value is a valid number
                    if (sums.hasOwnProperty(index)) {
                    sums[index] += value;
                    counts[index]++;
                    }
                    }
                    });
                    });
                    });

                    // Debugging
                    console.log('Calculated sums:', sums);
                    console.log('Calculated counts:', counts);


                    let footer = table.find('tfoot');
                    footer.empty();
                    let footerRow = $('<tr></tr>');
                    table.find('thead th').each(function(index) {
                    let td = $('<td></td>');
                    if (sums.hasOwnProperty(index)) {
                    if (table.find(`tbody tr td:nth-child(${index + 1}) input[data-sum]`).length > 0) {
                    td.addClass('sum-cell').text(sums[index].toFixed(2));
                    } else if (table.find(`tbody tr td:nth-child(${index + 1}) input[data-avg]`).length > 0) {
                    let avg = counts[index] > 0 ? (sums[index] / counts[index]).toFixed(2) : '0.00';
                    td.addClass('avg-cell').text(avg);
                    } else {
                    td.text('');
                    }
                    } else {
                    td.text('');
                    }
                    footerRow.append(td);
                    });
                    footer.append(footerRow);


                    table.find('input[data-agg]').off('input').on('input', function() {
                    sumGeneric(table.closest('.table-field'));
                    });

                    table.find('.btn-delete').off('click').on('click', function() {
                    $(this).closest('tr').remove();
                    sumGeneric(table.closest('.table-field'));
                    });
                    }


                    $('.table-field').each(function() {
                    sumGeneric($(this));
                    });


        {{trHtml}}


$(document).on('click', ' .btn-delete', function() {

    let table =  $(this).closest('table');
    let row = $(this).closest('tr');

    row.remove();
    reindexTable(table);
});

function reindexTable(table) {
    table.find('tr').each(function(index) {
        let newIndex = index + 1;

        $(this).find('[name]').each(function() {
            let nameAttr = $(this).attr('name');
            let newNameAttr = nameAttr.replace(/\[\d+\]/, `[${newIndex}]`);
            $(this).attr('name', newNameAttr);
        });
    });
}



         function updateUniqueOptions(table) {
    let selectedOptions = [];
    table.find('select.unique').each(function() {
        let value = $(this).val();
        if (value) {
            selectedOptions.push(value);
        }
    });

    table.find('select.unique').each(function() {
        let select = $(this);
        select.find('option').each(function() {
            let option = $(this);
            if (selectedOptions.includes(option.val()) && option.val() !== select.val()) {
                option.prop('disabled', true);
            } else {
                option.prop('disabled', false);
            }
        });
    });

    table.find('.btn-delete').off('click').on('click', function() {
        let row = $(this).closest('tr');
        let value = row.find('select.unique').val();
        row.remove();
        reEnableOption(table, value);
        updateUniqueOptions(table);

    });
}

function reEnableOption(table, value) {
    table.find('select.unique').each(function() {
        $(this).find(`option[value="${value}"]`).prop('disabled', false);
    });
}

    $(document).on('change', 'select.unique', function() {
        let table = $(this).closest('table');
        updateUniqueOptions(table);
    });

        $(document).on('change', '.select-sub', function() {

            var id = $(this).find(":selected").data('id')

            var path = "{{ url('/') }}/create-less/" + $(this).find(":selected").data('value')

            if(id > 0){
                path = "{{ url('/') }}/edit-less/" + $(this).find(":selected").data('value') + '/'+ id
            }
            // alert(path)
                     console.log(path);
            $.ajax({
                url: path,
                success: function(response) {
                     console.log(response);
                    $(".view-sub-form").html(response);
                    $('.dropify').dropify();
                    $('.content').each(function(i, obj) {
                        //test
                    $(this).richText();
                    });

                }
            });
        });

    </script>
    @include('admin.{{modelNamePluralKebabCase}}.include.multi')
    @include('admin.{{modelNamePluralKebabCase}}.include.custom')
@endsection



